// -= server/middlewares/error-middleware.js =-

const ApiError = require('../exceptions/api-error'); // импортируем ранее созданный класс

module.exports = function (err, req, res, next) { // это фун, кот принимает параметрами (ошибку, запрос, ответ и next)
    // middleware обработки ошибок первым параметром принимает саму ошибку!
    console.log(err); // выводим эту ошибку в консоль, чтобы это не делать в каждой функции контроллера
    if (err instanceof ApiError) { // проверяем, если ошибка является instance (экземпляр) этого класса, то сразу
        return res.status(err.status).json({message: err.message, errors: err.errors}) // возвращаем ответ на клиент:
        // обращаемся к response, вызываем status и передаем туда статус из ошибки (400 или 401), затем вызываем json
    } // и туда передаем данные, которые пойдут на клиент: (сообщение, массив ошибок)
    return res.status(500).json({message: 'Непредвиденная ошибка'}) // если if не выполнился, значит мы чего-то
    // не предусмотрели при создании класса и мы возвращаем статус-код 500 (серверная ошибка) и сообщение Непредвид ошиб
};

// чтобы это заработало, нужно в server/index.js импортировать этот файл и дописать там его
// в цепочке мидлваров !!!ПОСЛЕДНИМ!!!
//
// Чтобы загнать ошибку в мидлвар (см. -= server/service/user-service.js =- ) импортируем отсюда ApiError и по всем
// ошибкам прописываем одну из двух функций из server/exceptions/api-error.js и в server/controllers/user-controller.js
// в блоках catch вызываем функцию next(e), и тогда мы попадем в мидлваер, который раньше реализовали
// проверка в Postman 52:25